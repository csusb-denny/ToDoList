CSS controls how your HTML looks - colors, spacing, layouts, fonts alignment:
#Syntax and Selectors
CSS Rules Syntax:

selector {
  property: value;
}

example: 

h1 {
  color: blue;
  font-size: 2rem;
}


#Selector Types

element selector - targets tags directly:
p { color: black; }


Class selector - targets elements with a specific class:
#html
<div class="highlight">Hello</div>
#css
.highlight { background-color: yellow; }

ID selector - unique per page
<div id="main-title"></div>
#main-title { font-weight: bold; }
perfer classes over IDs for styling



2. Box Model
| margin |
| border |
| padding |
| content |
#every element is a box.
example:
div {
  margin: 20px;     /* outside space */
  padding: 10px;    /* inside space */
  border: 2px solid black;
}
margin: space outside the element

padding: space inside the element

border: line around it

content: actual element

3. Display Types:
block → full line width (e.g. <div>, <p>)

inline → doesn’t break line (e.g. <span>, <a>)

inline-block → like inline but you can set width/height


span {example:
  display: inline;
}

div {
  display: block;
}

button {
  display: inline-block;
}


4. Color, Fonts, spacing
colors.
h1 {
  color: red;                /* Named */
  color: #ff0000;            /* HEX */
  color: rgb(255, 0, 0);     /* RGB */
}
fonts.
body {
  font-family: Arial, sans-serif;
  font-size: 16px;
  line-height: 1.5;
}
spacing.
h1 {
  margin-bottom: 20px;
}

section {
  padding: 10px 20px;
}

how do you liink CSS to HTML?
inside your <head>

<link rel="stylesheet" href="style.css">

6. Visual Hiearchy and Clean Design types:
2-3 colors max for theme
consistent spacing and font sizes
!AVOID using borders; use padding and background color for structure
Keep Text legible:
  Min font size 16px for body
  high contrast(dark text on light background)
Use semantic structure -> style it with css classes


